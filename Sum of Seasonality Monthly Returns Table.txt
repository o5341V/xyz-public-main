// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © ILuvMarkets

//@version=5
//Author @ILuvMarkets
indicator("Seasonality", "Seasonality", format = format.volume)

i_year_start = input(2000, "Start Year")
i_text_size = input.string(size.auto, "Text Size", [size.auto, size.tiny, size.small, size.normal, size.large, size.huge])
i_text_size2 = input.string(size.normal, "Text Size", [size.auto, size.tiny, size.small, size.normal, size.large, size.huge])

var year_start_ = math.max(year, i_year_start)
var no_years_ = year(timenow) - year_start_ + 1
var matrix<float> data_  =  matrix.new<float>(no_years_,13,0.0)
var table table_ = na
var text_color_ = color.white
var currentMonthColor = color.orange
var currentYearColor = color.orange
var bg_color_ = color.gray

chg_pct_ = request.security(syminfo.tickerid, "M", nz(close/close[1]-1))
if year >= year_start_
    matrix.set(data_, year-year_start_, month-1, chg_pct_)

if barstate.islast
    table_ := table.new(position.middle_center, 13, year - year_start_ + 3, border_width = 1)
    table.cell(table_, 1, 0, "Jan", text_color = month(timenow) == 1 ? currentMonthColor :  text_color_, bgcolor = bg_color_, text_size = i_text_size2)
    table.cell(table_, 2, 0, "Feb", text_color = month(timenow) == 2 ? currentMonthColor :  text_color_, bgcolor = bg_color_, text_size = i_text_size)
    table.cell(table_, 3, 0, "Mar", text_color = month(timenow) == 3 ? currentMonthColor :  text_color_, bgcolor = bg_color_, text_size = i_text_size)
    table.cell(table_, 4, 0, "Apr", text_color = month(timenow) == 4 ? currentMonthColor :  text_color_, bgcolor = bg_color_, text_size = i_text_size2)
    table.cell(table_, 5, 0, "May", text_color = month(timenow) == 5 ? currentMonthColor :  text_color_, bgcolor = bg_color_, text_size = i_text_size)
    table.cell(table_, 6, 0, "Jun", text_color = month(timenow) == 6 ? currentMonthColor :  text_color_, bgcolor = bg_color_, text_size = i_text_size)
    table.cell(table_, 7, 0, "Jul", text_color = month(timenow) == 7 ? currentMonthColor :  text_color_, bgcolor = bg_color_, text_size = i_text_size2)
    table.cell(table_, 8, 0, "Aug", text_color = month(timenow) == 8 ? currentMonthColor :  text_color_, bgcolor = bg_color_, text_size = i_text_size)
    table.cell(table_, 9, 0, "Sep", text_color = month(timenow) == 9 ? currentMonthColor :  text_color_, bgcolor = bg_color_, text_size = i_text_size)
    table.cell(table_, 10, 0, "Oct", text_color = month(timenow) == 10 ? currentMonthColor :  text_color_, bgcolor = bg_color_, text_size = i_text_size2)
    table.cell(table_, 11, 0, "Nov", text_color = month(timenow) == 11 ? currentMonthColor :  text_color_, bgcolor = bg_color_, text_size = i_text_size)
    table.cell(table_, 12, 0, "Dec", text_color = month(timenow) == 12 ? currentMonthColor :  text_color_, bgcolor = bg_color_, text_size = i_text_size)

    for row_ = 0 to no_years_ - 1
        table.cell(table_, 0, 1+row_, str.tostring(row_ + year_start_), text_color = text_color_, bgcolor = bg_color_, text_size = i_text_size)
        for col_ = 0 to 11
            val_ = matrix.get(data_, row_, col_) 
            val_bgcolor_ = val_ > 0 ? color.green : val_ < 0 ? color.red : color.gray
            val_color_ = val_ > 0 ? color.green : val_ < 0 ? color.red : color.gray
            table.cell(table_, 1+col_, 1+row_, str.format("{0,number,###.##%}", val_), bgcolor = color.new(val_bgcolor_,80), text_color = val_color_, text_size = i_text_size)
            true

    //Aggregates
    row_ = no_years_ + 1
    table.cell(table_, 0, row_, "SUM", text_color = text_color_, bgcolor = bg_color_, text_size = i_text_size)
    for col_ = 0 to 11
        arr_ = matrix.col(data_, col_) 
        val_ = array.sum(arr_)
        val_color_ = val_ > 0 ? color.green : val_ < 0 ? color.red : color.gray 
        table.cell(table_, 1+col_, row_, str.format("{0,number,###.##%}", val_), bgcolor = color.new(val_color_,50), text_color = val_color_, text_size = i_text_size)
        true