// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © EW_T

//@version=5
indicator("Seasonality Charts", overlay=false, max_lines_count=500, max_labels_count=500, max_boxes_count=500)
lookback = input.int(title="Number of Years Back", defval=10, minval=1)
his_col = input.color(#d1d4dc, "Histogram Color")
frame_col = input.color(#d1d4dc, "Chart Frame Color")

show_labels = input.bool(title="Labels", defval=true, inline="labels")
size_labelsi = input.string("Auto", "", options=["Tiny", "Small", "Normal", "Auto"], inline="labels")
auto_offset = input.bool(title="Auto Offset", defval=true)
offsetbar = input.int(title="Offset", defval=0, minval=0, maxval=499)


lbs(x) =>
    x == "Small" ? size.small : x == "Normal" ? size.normal : x== "Tiny" ? size.tiny : size.auto
size_labels = lbs(size_labelsi)

gettime1(unixtime) =>
    ut = array.get(unixtime, 0)

gettime2(unixtime) =>
    ut = array.get(unixtime, math.min(lookback, array.size(unixtime)-1))

pushunix(unixtime, start, end) =>
    if array.size(unixtime) != 0
        array.push(start, gettime1(unixtime))
        array.push(end, gettime2(unixtime))

offsetm = auto_offset ? bar_index < 36 ? (36 - bar_index) : 0 : offsetbar

seasonality(_month, m_o, m_c, sq, monthtxt, unixtime) =>
    if month((time+time_close)/2) == _month
        array.push(m_c, close)
        array.push(m_o, open)
        array.push(unixtime, int((time+time_close)/2))
    if array.size(m_c) > lookback
        array.shift(m_c)
        array.shift(m_o)
        array.shift(unixtime)
    posm = 0.0
    sumgl = 0.0
    if array.size(m_c) > 0
        for i = 0 to math.min(lookback, array.size(m_c)) - 1
            c1 = array.get(m_c, array.size(m_c)-1-i)
            o1 = array.get(m_o, array.size(m_c)-1-i)
            if c1 > o1
                posm += 1
            sumgl += (c1 - o1)/o1*100
    perposm = posm/math.min(lookback, array.size(m_c))*100
    agl = sumgl/math.min(lookback, array.size(m_c))

    var id = box.new(bar_index - 2 - 3 * sq + offsetm, perposm, bar_index - 3 * sq + offsetm, 0, border_color=#00000000, bgcolor=his_col)
    box.set_lefttop(id, bar_index - 2 - 3* sq + offsetm, perposm)
    box.set_rightbottom(id, bar_index - 3 * sq + offsetm, 0)
    txt1 = na(perposm) ? "" : str.tostring(perposm, "#") + "%"
    txt2 = na(agl) ? "" : str.tostring(agl, "#.#") + "%" + "\n" + monthtxt
    if show_labels
        var id_lb1 = box.new(bar_index - 2 - 3 * sq + offsetm, perposm+15, bar_index - 3 * sq + offsetm, perposm, border_color=#00000000, bgcolor=#00000000, text=txt1, text_size=size_labels, text_color=#ffffff, text_wrap=text.wrap_none)
        box.set_lefttop(id_lb1, bar_index - 2 - 3* sq + offsetm, perposm+15)
        box.set_rightbottom(id_lb1, bar_index - 3 * sq + offsetm, perposm)
        box.set_text(id_lb1, txt1)
        var id_lb2 = box.new(bar_index - 2 - 3 * sq + offsetm, -5, bar_index - 3 * sq + offsetm, -20, border_color=#00000000, bgcolor=#00000000, text=txt2, text_size=size_labels, text_color=#ffffff, text_wrap=text.wrap_none)
        box.set_lefttop(id_lb2, bar_index - 2 - 3* sq + offsetm, -5)
        box.set_rightbottom(id_lb2, bar_index - 3 * sq + offsetm, -20)
        box.set_text(id_lb2, txt2)

var january_o = array.new_float()
var january_c = array.new_float()
var february_o = array.new_float()
var february_c = array.new_float()
var march_o = array.new_float()
var march_c = array.new_float()
var april_o = array.new_float()
var april_c = array.new_float()
var may_o = array.new_float()
var may_c = array.new_float()
var june_o = array.new_float()
var june_c = array.new_float()
var july_o = array.new_float()
var july_c = array.new_float()
var august_o = array.new_float()
var august_c = array.new_float()
var september_o = array.new_float()
var september_c = array.new_float()
var october_o = array.new_float()
var october_c = array.new_float()
var november_o = array.new_float()
var november_c = array.new_float()
var december_o = array.new_float()
var december_c = array.new_float()

var unixtime1 = array.new_int()
var unixtime2 = array.new_int()
var unixtime3 = array.new_int()
var unixtime4 = array.new_int()
var unixtime5 = array.new_int()
var unixtime6 = array.new_int()
var unixtime7 = array.new_int()
var unixtime8 = array.new_int()
var unixtime9 = array.new_int()
var unixtime10 = array.new_int()
var unixtime11 = array.new_int()
var unixtime12 = array.new_int()
if timeframe.period != 'M'
    runtime.error("Open Monthly Chart")
if timeframe.period == 'M'
    seasonality(12, december_o, december_c, 0, "Dec", unixtime12)
    seasonality(11, november_o, november_c, 1, "Nov", unixtime11)
    seasonality(10, october_o, october_c, 2, "Oct", unixtime10)
    seasonality(9, september_o, september_c, 3, "Sep", unixtime9)
    seasonality(8, august_o, august_c, 4, "Aug", unixtime8)
    seasonality(7, july_o, july_c, 5, "Jul", unixtime7)
    seasonality(6, june_o, june_c, 6, "Jun", unixtime6)
    seasonality(5, may_o, may_c, 7, "May", unixtime5)
    seasonality(4, april_o, april_c, 8, "Apr", unixtime4)
    seasonality(3, march_o, march_c, 9, "Mar", unixtime3)
    seasonality(2, february_o, february_c, 10, "Feb", unixtime2)
    seasonality(1, january_o, january_c, 11, "Jan", unixtime1)
    
    var chart_box = box.new(bar_index - 36 + offsetm, 115, bar_index + 1 + offsetm, -5, border_color=frame_col, bgcolor=na)
    box.set_left(chart_box, bar_index - 36 + offsetm)
    box.set_right(chart_box, bar_index + 1 + offsetm)
    
    if show_labels
        var year_lb = box.new(bar_index - 36 + offsetm, 135, bar_index + 1 + offsetm, 115, border_color=#00000000, bgcolor=#00000000, text='Seasonality Chart ' + syminfo.tickerid, text_size=size_labels, text_color=#ffffff, text_wrap=text.wrap_none)
        box.set_left(year_lb, bar_index - 36 + offsetm)
        box.set_right(year_lb, bar_index + 1 + offsetm)
        
        start1 = array.new_int()
        end1 = array.new_int()
        
        pushunix(unixtime1, start1, end1)
        pushunix(unixtime2, start1, end1)
        pushunix(unixtime3, start1, end1)
        pushunix(unixtime4, start1, end1)
        pushunix(unixtime5, start1, end1)
        pushunix(unixtime6, start1, end1)
        pushunix(unixtime7, start1, end1)
        pushunix(unixtime8, start1, end1)
        pushunix(unixtime9, start1, end1)
        pushunix(unixtime10, start1, end1)
        pushunix(unixtime11, start1, end1)
        pushunix(unixtime12, start1, end1)
        
        start_time = array.min(start1)
        end_time = array.max(end1)

        txtyear = "" + syminfo.tickerid + " " + str.tostring(year(end_time)-year(start_time)+1) + "Y\n" + str.tostring(month(start_time)) + "/" + str.tostring(year(start_time)) + " - " + str.tostring(month(end_time)) + "/" + str.tostring(year(end_time))
        box.set_text(year_lb, txtyear)


