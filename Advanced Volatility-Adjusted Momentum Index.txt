// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © BiggWigg


//@version=4
study("Advanced Volatility-Adjusted Momentum Index", shorttitle="AVAMI", overlay=false)

// Inputs for lookback periods and smoothing factor
momentum_length = input(14, title="Momentum Length")
volatility_length = input(14, title="Volatility Length")
smooth_length = input(3, title="Smoothing Length")
lookback = input(232, title="Lookback Period for Scaling")
showdivs = input(true, title="Show Divergences")
showhidden = input(false, title="Show Hidden Divergences")
overbought = input(70, title="Overbought Level")
oversold = input(30, title="Oversold Level")
midline = input(50, title="Mid Level")

// Calculate Momentum as simple rate of change
momentum = roc(close, momentum_length)

// Calculate Volatility as standard deviation of returns
returns = log(close / close[1])
volatility = stdev(returns, volatility_length)

// Adjust Momentum by Volatility
vami = momentum / volatility

// Smooth the VAMI with a moving average
smoothed_vami = sma(vami, smooth_length)

// Create a signal line as an EMA of the smoothed VAMI
signal_line = ema(smoothed_vami, smooth_length)

// Find min and max of smoothed_vami over lookback period
vami_min = lowest(smoothed_vami, lookback)
vami_max = highest(smoothed_vami, lookback)

// Rescale smoothed_vami to 0-100 scale
vami_rescaled = (smoothed_vami - vami_min) / (vami_max - vami_min) * 100

// Find min and max of signal_line over lookback period
signal_min = lowest(signal_line, lookback)
signal_max = highest(signal_line, lookback)

// Rescale signal_line to 0-100 scale
signal_rescaled = (signal_line - signal_min) / (signal_max - signal_min) * 100

// Function to find top and bottom fractals
f_top_fractal(_src) => _src[4] < _src[2] and _src[3] < _src[2] and _src[2] > _src[1] and _src[2] > _src[0]
f_bot_fractal(_src) => _src[4] > _src[2] and _src[3] > _src[2] and _src[2] < _src[1] and _src[2] < _src[0]
f_fractalize(_src) => f_top_fractal(_src) ? 1 : f_bot_fractal(_src) ? -1 : 0

fractal_top = f_fractalize(vami_rescaled) > 0 ? vami_rescaled[2] : na
fractal_bot = f_fractalize(vami_rescaled) < 0 ? vami_rescaled[2] : na

high_prev = valuewhen(fractal_top, vami_rescaled[2], 1)
high_price = valuewhen(fractal_top, high[2], 1)
low_prev = valuewhen(fractal_bot, vami_rescaled[2], 1)
low_price = valuewhen(fractal_bot, low[2], 1)

// Define divergence conditions
regular_bearish_div = fractal_top and high[2] > high_price and vami_rescaled[2] < high_prev
hidden_bearish_div = fractal_top and high[2] < high_price and vami_rescaled[2] > high_prev
regular_bullish_div = fractal_bot and low[2] < low_price and vami_rescaled[2] > low_prev
hidden_bullish_div = fractal_bot and low[2] > low_price and vami_rescaled[2] < low_prev

// Plot the indicator and signal line
plot(vami_rescaled, title="Rescaled Advanced Volatility-Adjusted Momentum Indicator", color=color.blue)
plot(signal_rescaled, title="Rescaled Signal Line", color=color.red)

// Plot overbought, oversold and midline
hline(overbought, "Overbought", color=color.red, linestyle=hline.style_dotted)
hline(oversold, "Oversold", color=color.green, linestyle=hline.style_dotted)
hline(midline, "Midline", color=color.blue, linestyle=hline.style_dotted)

// Plot divergence labels if 'Show Divergences' is checked
if (regular_bearish_div and showdivs)
    label.new(bar_index[2], signal_rescaled[2], text="R", color=color.red, textcolor=color.white, style=label.style_labeldown, size=size.small)
if (hidden_bearish_div and showdivs and showhidden)
    label.new(bar_index[2], signal_rescaled[2], text="H", color=color.red, textcolor=color.white, style=label.style_labeldown, size=size.small)
if (regular_bullish_div and showdivs)
    label.new(bar_index[2], signal_rescaled[2], text="R", color=color.green, style=label.style_labelup, size=size.small)
if (hidden_bullish_div and showdivs and showhidden)
    label.new(bar_index[2], signal_rescaled[2], text="H", color=color.green, style=label.style_labelup, size=size.small)
