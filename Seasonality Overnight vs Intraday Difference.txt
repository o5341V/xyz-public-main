// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © ILuvMarkets

//@version=5
//Author @ILuvMarkets
indicator("ILM Overnight vs Intraday", "Overnight vs Intraday")

if not timeframe.isdaily
    runtime.error("Please switch timeframe to Daily")

i_year_start = input(2000, "Start Year")
i_text_size = input.string(size.auto, "Text Size", [size.auto, size.tiny, size.small, size.normal, size.large, size.huge])

var year_start_ = math.max(year, i_year_start)
var no_years_ = year(timenow) - year_start_ + 1
var matrix<float> data_  =  matrix.new<float>(no_years_,14,0.0)
var matrix<string> tt_data_  =  matrix.new<string>(no_years_,14,"")
var table table_ = na
var text_color_ = color.white
var bg_color_ = color.gray

//Debug
// plotchar(dayofweek,"DOW","", location.top)  // Sun-1 .... Sat- 7 

[on_chg_pct_, id_chg_pct_] = request.security(syminfo.tickerid, "D", [nz(open/close[1]-1), nz(close/open-1)])
if year >= year_start_ 
// if year >= 2022 and month >= 10 and dayofmonth >= 1 
    on_cur_val_ = matrix.get(data_, year-year_start_, 2*(dayofweek-1))
    matrix.set(data_, year-year_start_, 2*(dayofweek-1), on_cur_val_ + on_chg_pct_)
    id_cur_val_ = matrix.get(data_, year-year_start_, 2*(dayofweek-1)+1)
    matrix.set(data_, year-year_start_, 2*(dayofweek-1)+1, id_cur_val_ + id_chg_pct_)
    //Tooltip data
    on_cur_str_ = matrix.get(tt_data_, year-year_start_, 2*(dayofweek-1))
    matrix.set(tt_data_, year-year_start_, 2*(dayofweek-1), str.format("{0}{1,number,####}-{2,number,##}-{3,number,##} {4,number,#.##%}\t", on_cur_str_, year(time), month(time), dayofmonth(time), on_chg_pct_))
    id_cur_str_ = matrix.get(tt_data_, year-year_start_, 2*(dayofweek-1)+1)
    matrix.set(tt_data_, year-year_start_, 2*(dayofweek-1)+1, str.format("{0}{1,number,####}-{2,number,##}-{3,number,##} {4,number,#.##%}\t", id_cur_str_, year(time), month(time), dayofmonth(time), id_chg_pct_))

if barstate.islast
    table_ := table.new(position.middle_center, 15, year - year_start_ + 4, border_width = 1)
    table.cell(table_, 1, 0, "Sun", text_color = text_color_, bgcolor = bg_color_, text_size = i_text_size)
    table.cell(table_, 3, 0, "Mon", text_color = text_color_, bgcolor = bg_color_, text_size = i_text_size)
    table.cell(table_, 5, 0, "Tue", text_color = text_color_, bgcolor = bg_color_, text_size = i_text_size)
    table.cell(table_, 7, 0, "Wed", text_color = text_color_, bgcolor = bg_color_, text_size = i_text_size)
    table.cell(table_, 9, 0, "Thu", text_color = text_color_, bgcolor = bg_color_, text_size = i_text_size)
    table.cell(table_, 11, 0, "Fri", text_color = text_color_, bgcolor = bg_color_, text_size = i_text_size)
    table.cell(table_, 13, 0, "Sat", text_color = text_color_, bgcolor = bg_color_, text_size = i_text_size)
    table.merge_cells(table_,1,0,2,0)
    table.merge_cells(table_,3,0,4,0)
    table.merge_cells(table_,5,0,6,0)
    table.merge_cells(table_,7,0,8,0)
    table.merge_cells(table_,9,0,10,0)
    table.merge_cells(table_,11,0,12,0)
    table.merge_cells(table_,13,0,14,0)

    for col_ = 0 to 6
        table.cell(table_, 1+col_*2, 1, "ON", text_color = text_color_, bgcolor = bg_color_, text_size = i_text_size, tooltip = "open/close[1]-1")
        table.cell(table_, 1+col_*2+1, 1, "ID", text_color = text_color_, bgcolor = bg_color_, text_size = i_text_size, tooltip = "close/open-1")


    for row_ = 0 to no_years_ - 1
        table.cell(table_, 0, 2+row_, str.tostring(row_ + year_start_), text_color = text_color_, bgcolor = bg_color_, text_size = i_text_size)
        for col_ = 0 to 13
            val_ = matrix.get(data_, row_, col_) 
            val_color_ = val_ > 0 ? color.green : val_ < 0 ? color.red : color.gray 
            tt_str_ = matrix.get(tt_data_, row_, col_) 
            table.cell(table_, 1+col_, 2+row_, str.format("{0,number,###.##%}", val_), bgcolor = color.new(val_color_,80), text_color = val_color_, text_size = i_text_size, tooltip = tt_str_)
            true

    //Aggregates
    row_ = no_years_ + 1 + 1
    table.cell(table_, 0, row_, "SUM", text_color = text_color_, bgcolor = bg_color_, text_size = i_text_size)
    for col_ = 0 to 13
        arr_ = matrix.col(data_, col_) 
        val_ = array.sum(arr_)
        val_color_ = val_ > 0 ? color.green : val_ < 0 ? color.red : color.gray 
        table.cell(table_, 1+col_, row_, str.format("{0,number,###.##%}", val_), bgcolor = color.new(val_color_,50), text_color = val_color_, text_size = i_text_size)
        true

plot(ta.cum(id_chg_pct_), "Intra-Day")
plot(ta.cum(on_chg_pct_), "Overnight")

ID_cum = ta.cum(id_chg_pct_)
ON_cum = ta.cum(on_chg_pct_)

difference_ON_ID = ID_cum - ON_cum
plot(difference_ON_ID)