// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © robbatt

//@version=6

import robbatt/lib_no_delay/14 as ND

// @description offers a commonly usable function to detect divergences
library("lib_divergence")

//@function Detects Divergences between Price and Oscillator action. For bullish divergences, look at trend lines between lows. For bearish divergences, look at trend lines between highs. (strong) oscillator trending, price opposing it | (medium) oscillator trending, price trend flat | (weak) price opposite trending, oscillator trend flat | (hidden) price trending, oscillator opposing it. Pivot detection is only properly done in oscillator data, reference price data is only compared at the oscillator pivot (speed optimization) 
//@param osc (series float) oscillator data (can be anything, even another instrument price)
//@param pivot_confirmation_bars_left (simple int) optional number of bars left of a confirmed pivot point, confirming it is the highest/lowest in the range before and up to the pivot (default: 5)
//@param pivot_confirmation_bars_right (simple int) optional number of bars right of a confirmed pivot point, confirming it is the highest/lowest in the range from and after the pivot (default: 3)
//@param pivot_min_x_distance (simple int) optional minimum distance between pivot points considered for a divergence (should not be bigger than pivot_leftbars) (default: 5)
//@param pivot_max_x_distance (simple int) optional maximum distance between pivot points considered for a divergence (should not be bigger than pivot_leftbars) (default: 50)
//@param ref_high (series float) optional reference range to compare the oscillator pivot points to. (default: high)
//@param ref_low (series float) optional reference range to compare the oscillator pivot points to. (default: low)
//@param pivot_min_y_distance_len (simple int) optional lookback distance for the deviation detection for the offset zone around the last oscillator H/L when detecting following equal H/Ls. Used as well for the ATR that does the equal H/L detection for the reference price. (default: 14)
//@param pivot_min_y_distance_dev_mult (simple float) optional scaling factor for the offset zone (xDeviation) around the last oscillator H/L when detecting following equal H/Ls (default: 0.1)
//@param pivot_min_y_distance_atr_mult (simple float) optional scaling factor for the offset zone (xATR) around the last price H/L when detecting following equal H/Ls (default: 0.1)
//@return A tuple of deviation flags. [strong_bull, strong_bear, medium_bull, medium_bear, weak_bull, weak_bear, hidden_bull, hidden_bear, osc_pivot_h, osc_pivot_l]
export divergence(float osc, simple int pivot_confirmation_bars_left = 5, simple int pivot_confirmation_bars_right = 3, simple int pivot_min_x_distance = 5, simple int pivot_max_x_distance = 50, series float ref_low = low, series float ref_high = high, simple int pivot_min_y_distance_len = 14, simple float pivot_min_y_distance_dev_mult = 0.1, simple float pivot_min_y_distance_atr_mult = 0.1) =>

    //check if we have pivot high/low in osc
    bool osc_pivot_l = na(ta.pivotlow(osc, pivot_confirmation_bars_left, pivot_confirmation_bars_right)) ? false : true //returns price of the pivot low point. It returns 'NaN', if there was no pivot low point.
    bool osc_pivot_h = na(ta.pivothigh(osc, pivot_confirmation_bars_left, pivot_confirmation_bars_right)) ? false : true //returns price of the pivot low point. It returns 'NaN', if there was no pivot low point.
    var osc_prev_l_idx   = 0
    var osc_prev_l_value = 0.0
    var price_prev_l     = 0.0
    var osc_prev_h_idx   = 0
    var osc_prev_h_value = 0.0
    var price_prev_h     = 0.0

    if barstate.isconfirmed and (osc_pivot_h or osc_pivot_l)

        // check x/bar distance between pivot points // actually the points at which they have been detected
        prev_pivot_value    = osc_pivot_h ? osc_prev_h_value : osc_prev_l_value
        prev_pivot_price    = osc_pivot_h ? price_prev_h : price_prev_l

        new_pivot_value     = osc[pivot_confirmation_bars_right]
        new_pivot_price     = osc_pivot_h ? ref_high[pivot_confirmation_bars_right] : ref_low[pivot_confirmation_bars_right]
        new_pivot_distance  = osc_pivot_h ? bar_index - osc_prev_h_idx : bar_index - osc_prev_l_idx

        // store values for next iteration to avoid using ta.valuewhen to find previous h/l values
        if osc_pivot_h 
            osc_prev_h_idx   := bar_index
            osc_prev_h_value := new_pivot_value
            price_prev_h     := new_pivot_price
        if osc_pivot_l
            osc_prev_l_idx   := bar_index
            osc_prev_l_value := new_pivot_value
            price_prev_l     := new_pivot_price

        // check y/value distance between OSC pivots
        float osc_dev = ND.dev(new_pivot_value, pivot_min_y_distance_len) * pivot_min_y_distance_dev_mult
        int   mode    = new_pivot_value < prev_pivot_value - osc_dev ? -1 : new_pivot_value > prev_pivot_value + osc_dev ? 1 : 0

        // check y/price distance between Price pivots 
        float price_atr = ND.atr(pivot_min_y_distance_len) * pivot_min_y_distance_atr_mult
        int   mode_p    = new_pivot_price < prev_pivot_price - price_atr ? -1 : new_pivot_price > prev_pivot_price + price_atr ? 1 : 0

        // check pivot constellations for divergences
        bool x_distance_in_range = new_pivot_distance >= pivot_min_x_distance and new_pivot_distance <= pivot_max_x_distance

        bool strong_bull         = osc_pivot_l and x_distance_in_range and mode ==  1 and mode_p == -1
        bool medium_bull         = osc_pivot_l and x_distance_in_range and mode ==  1 and mode_p ==  0
        bool weak_bull           = osc_pivot_l and x_distance_in_range and mode ==  0 and mode_p == -1
        bool hidden_bull         = osc_pivot_l and x_distance_in_range and mode == -1 and mode_p ==  1
        bool strong_bear         = osc_pivot_h and x_distance_in_range and mode == -1 and mode_p ==  1
        bool medium_bear         = osc_pivot_h and x_distance_in_range and mode == -1 and mode_p ==  0
        bool weak_bear           = osc_pivot_h and x_distance_in_range and mode ==  0 and mode_p ==  1
        bool hidden_bear         = osc_pivot_h and x_distance_in_range and mode ==  1 and mode_p == -1

    	[strong_bull, strong_bear, medium_bull, medium_bear, weak_bull, weak_bear, hidden_bull, hidden_bear, osc_pivot_h, osc_pivot_l]
	else
		[false, false, false, false, false, false, false, false, osc_pivot_h, osc_pivot_l]



/////////////////////////////////////////////////////////////////
//                            DEMO							   //
/////////////////////////////////////////////////////////////////

var string g_source = 'Divergence data source'
var string src_select = input.string('RSI', 'Select Divergence Data', ['RSI', 'Symbol', 'Source'], group = g_source, inline = 'src')
float rsi = ND.rsi(close, 14)
string src_symbol = input.symbol('binance:BTCUSDT', 'Alternative Divergence Data (Symbol)', group = g_source)
float  src_source = input.source(ohlc4, 'Alternative Divergence Data (Source)', group = g_source)

float divergence_src = switch src_select
	'Symbol' => request.security(src_symbol, timeframe.period, close)
	'Source' => src_source
	'RSI' 	 => rsi

plot(divergence_src, 'Divergence Source', chart.fg_color)

var string g_div = 'Divergences'
var bool show_strong_bull                = input.bool  (true  , 'strong bull'                                                        , group = g_div, inline = 'strong')         
var bool show_strong_bear                = input.bool  (true  , 'strong bear'                                                        , group = g_div, inline = 'strong')         
var bool show_medium_bull                = input.bool  (false , 'medium bull'                                                        , group = g_div, inline = 'medium')         
var bool show_medium_bear                = input.bool  (false , 'medium bear'                                                        , group = g_div, inline = 'medium')         
var bool show_weak_bull                  = input.bool  (false , 'weak bull'                                                          , group = g_div, inline = 'weak')    
var bool show_weak_bear                  = input.bool  (false , 'weak bear'                                                          , group = g_div, inline = 'weak')    
var bool show_hbull                      = input.bool  (true  , 'hidden bull'                                                        , group = g_div, inline = 'hidden')         
var bool show_hbear                      = input.bool  (true  , 'hidden bear'                                                        , group = g_div, inline = 'hidden')         

var int pivot_confirmation_bars_left     = input.int   (5     , 'Confirmation bars Left'                    , minval = 1             , group = g_div, inline = 'confirmation')
var int pivot_confirmation_bars_right    = input.int   (3     ,                   'Right'                   , minval = 1             , group = g_div, inline = 'confirmation')
var int div_min_range                    = input.int   (5     , 'Divergence size (bars) Min'                , minval = 1             , group = g_div, inline = 'div range')
var int div_max_range                    = input.int   (60    ,                        'Max'                , minval = 1             , group = g_div, inline = 'div range')
var int pivot_min_y_distance_len         = input.int   (14    , 'Equal H/L ±zone ATR/deviation length'      , minval = 1             , group = g_div)
var float pivot_min_y_distance_atr_mult  = input.float (0.2   , 'Equal H/L ±zone (x ATR price)'             , minval = 0, step = 0.1 , group = g_div)
var float pivot_min_y_distance_dev_mult  = input.float (0.01  , 'Equal H/L ±zone (x Deviation oscillator)'  , minval = 0, step = 0.01, group = g_div)

[strong_bull, strong_bear, medium_bull, medium_bear, weak_bull, weak_bear, hidden_bull, hidden_bear, osc_pivot_h, osc_pivot_l] = divergence(divergence_src, pivot_confirmation_bars_left , pivot_confirmation_bars_right, div_min_range, div_max_range, low, high, pivot_min_y_distance_len, pivot_min_y_distance_dev_mult, pivot_min_y_distance_atr_mult)
bull = strong_bull or medium_bull or weak_bull
bear = strong_bear or medium_bear or weak_bear
bool _show_bull = show_strong_bull and strong_bull or show_medium_bull and medium_bull or show_weak_bull and weak_bull
bool _show_bear = show_strong_bear and strong_bear or show_medium_bear and medium_bear or show_weak_bear and weak_bear
bool _show_hbull = show_hbull and hidden_bull
bool _show_hbear = show_hbear and hidden_bear

color col_bull  = input.color(color.green , 'color bull Line' , inline = 'bull' )
color col_bear  = input.color(color.red   , 'color bear Line' , inline = 'bear' )
color col_eqhl  = input.color(color.gray  , 'color equal Line', inline = 'eqhl' )
color col_hBull = input.color(#217924 , 'color hBull Line', inline = 'hBull')
color col_hBear = input.color(#b32222   , 'color hBear Line', inline = 'hBear')

color col_bull_label  = input.color(color.green , 'Label', inline = 'bull')
color col_bear_label  = input.color(color.red   , 'Label', inline = 'bear')
color col_eqhl_label  = input.color(color.gray   , 'Label', inline = 'eqhl')
color col_hBull_label = input.color(#217924 , 'Label', inline = 'hBull')
color col_hBear_label = input.color(#b32222   , 'Label', inline = 'hBear')

//Plot the areas, terneary conditional operator
price_div_line_color  = (show_strong_bull and strong_bull or show_weak_bull and weak_bull)     ? col_bear       : (show_medium_bull and medium_bull) ? col_eqhl       : (show_hbull and hidden_bull) ? col_hBull       : (show_strong_bear and strong_bear or show_weak_bear and weak_bear)     ? col_bull       : (show_medium_bear and medium_bear) ? col_eqhl       : (show_hbear and hidden_bear) ? col_hBear       : #00000000
osc_div_line_color    = (show_strong_bull and strong_bull or show_medium_bull and medium_bull) ? col_bull       : (show_weak_bull and weak_bull)     ? col_eqhl       : (show_hbull and hidden_bull) ? col_hBear       : (show_strong_bear and strong_bear or show_medium_bear and medium_bear) ? col_bear       : (show_weak_bear and weak_bear)     ? col_eqhl       : (show_hbear and hidden_bear) ? col_hBull       : #00000000
div_label_color       = (show_strong_bull and strong_bull or show_medium_bull and medium_bull or show_weak_bull and weak_bull) ? col_bull_label : (show_hbull and hidden_bull) ? col_hBull_label : (show_strong_bear and strong_bear or show_medium_bear and medium_bear or show_weak_bear and weak_bear) ? col_bear_label : (show_hbear and hidden_bear) ? col_hBear_label : #00000000 

plot( osc_pivot_l ? low[pivot_confirmation_bars_right]            : na                               , offset = -pivot_confirmation_bars_right , linewidth = 2   , color = price_div_line_color, force_overlay = true)
plot( osc_pivot_h ? high[pivot_confirmation_bars_right]           : na                               , offset = -pivot_confirmation_bars_right , linewidth = 2   , color = price_div_line_color, force_overlay = true)
plot( osc_pivot_l ? divergence_src[pivot_confirmation_bars_right] : na                               , offset = -pivot_confirmation_bars_right , linewidth = 2   , color = osc_div_line_color)
plot( osc_pivot_h ? divergence_src[pivot_confirmation_bars_right] : na                               , offset = -pivot_confirmation_bars_right , linewidth = 2   , color = osc_div_line_color)

plotshape( show_strong_bull and strong_bull ? low[pivot_confirmation_bars_right]            : na , offset = -pivot_confirmation_bars_right , text = "str\nbull"  , style = shape.labelup      , location = location.belowbar , color = div_label_color , textcolor = color.white, force_overlay = true )
plotshape( show_strong_bear and strong_bear ? high[pivot_confirmation_bars_right]           : na , offset = -pivot_confirmation_bars_right , text = "str\nbear"  , style = shape.labeldown    , location = location.abovebar , color = div_label_color , textcolor = color.white, force_overlay = true )
plotshape( show_medium_bull and medium_bull ? low[pivot_confirmation_bars_right]            : na , offset = -pivot_confirmation_bars_right , text = "med\nbull"  , style = shape.labelup      , location = location.belowbar , color = div_label_color , textcolor = color.white, force_overlay = true )
plotshape( show_medium_bear and medium_bear ? high[pivot_confirmation_bars_right]           : na , offset = -pivot_confirmation_bars_right , text = "med\nbear"  , style = shape.labeldown    , location = location.abovebar , color = div_label_color , textcolor = color.white, force_overlay = true )
plotshape( show_weak_bull   and weak_bull   ? low[pivot_confirmation_bars_right]            : na , offset = -pivot_confirmation_bars_right , text = "weak\nbull" , style = shape.labelup      , location = location.belowbar , color = div_label_color , textcolor = color.white, force_overlay = true )
plotshape( show_weak_bear   and weak_bear   ? high[pivot_confirmation_bars_right]           : na , offset = -pivot_confirmation_bars_right , text = "weak\nbear" , style = shape.labeldown    , location = location.abovebar , color = div_label_color , textcolor = color.white, force_overlay = true )
plotshape( show_hbull       and hidden_bull ? low[pivot_confirmation_bars_right]            : na , offset = -pivot_confirmation_bars_right , text = "hid\nbull"  , style = shape.labelup      , location = location.belowbar , color = div_label_color , textcolor = color.white, force_overlay = true )
plotshape( show_hbear       and hidden_bear ? high[pivot_confirmation_bars_right]           : na , offset = -pivot_confirmation_bars_right , text = "hid\nbear"  , style = shape.labeldown    , location = location.abovebar , color = div_label_color , textcolor = color.white, force_overlay = true )

plotshape( show_strong_bull and strong_bull ? divergence_src[pivot_confirmation_bars_right] : na , offset = -pivot_confirmation_bars_right , text = "str\nbull"  , style = shape.labelup      , location = location.absolute , color = div_label_color , textcolor = color.white )
plotshape( show_strong_bear and strong_bear ? divergence_src[pivot_confirmation_bars_right] : na , offset = -pivot_confirmation_bars_right , text = "str\nbear"  , style = shape.labeldown    , location = location.absolute , color = div_label_color , textcolor = color.white )
plotshape( show_medium_bull and medium_bull ? divergence_src[pivot_confirmation_bars_right] : na , offset = -pivot_confirmation_bars_right , text = "med\nbull"  , style = shape.labelup      , location = location.absolute , color = div_label_color , textcolor = color.white )
plotshape( show_medium_bear and medium_bear ? divergence_src[pivot_confirmation_bars_right] : na , offset = -pivot_confirmation_bars_right , text = "med\nbear"  , style = shape.labeldown    , location = location.absolute , color = div_label_color , textcolor = color.white )
plotshape( show_weak_bull   and weak_bull   ? divergence_src[pivot_confirmation_bars_right] : na , offset = -pivot_confirmation_bars_right , text = "weak\nbull" , style = shape.labelup      , location = location.absolute , color = div_label_color , textcolor = color.white )
plotshape( show_weak_bear   and weak_bear   ? divergence_src[pivot_confirmation_bars_right] : na , offset = -pivot_confirmation_bars_right , text = "weak\nbear" , style = shape.labeldown    , location = location.absolute , color = div_label_color , textcolor = color.white )
plotshape( show_hbull       and hidden_bull ? divergence_src[pivot_confirmation_bars_right] : na , offset = -pivot_confirmation_bars_right , text = "hid\nbull"  , style = shape.labelup      , location = location.absolute , color = div_label_color , textcolor = color.white )
plotshape( show_hbear       and hidden_bear ? divergence_src[pivot_confirmation_bars_right] : na , offset = -pivot_confirmation_bars_right , text = "hid\nbear"  , style = shape.labeldown    , location = location.absolute , color = div_label_color , textcolor = color.white )

plotshape( _show_bull or _show_hbull ? low[pivot_confirmation_bars_right]            : na                                                           , style = shape.cross        , location = location.absolute , color = div_label_color  , size = size.tiny , force_overlay = true)
plotshape( _show_bear or _show_hbear ? high[pivot_confirmation_bars_right]           : na                                                           , style = shape.cross        , location = location.absolute , color = div_label_color  , size = size.tiny , force_overlay = true)
plotshape( _show_bull or _show_hbull ? divergence_src[pivot_confirmation_bars_right] : na                                                           , style = shape.cross        , location = location.absolute , color = div_label_color  , size = size.tiny )
plotshape( _show_bear or _show_hbear ? divergence_src[pivot_confirmation_bars_right] : na                                                           , style = shape.cross        , location = location.absolute , color = div_label_color  , size = size.tiny )

