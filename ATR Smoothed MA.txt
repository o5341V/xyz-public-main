// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © dysrupt Modifyed by @guikroth


//@version=5
indicator(title='ATR Smoothed_BuySell version', shorttitle='ATR_SM_BuySell', overlay=true)


////////////////////////////////////////////////////////////////////////////////INPUTS

nATRPeriod = input(21, 'Period')
nATRMultip = input.float(6.3, 'Multiplier', minval=0.5, maxval=1000, step=0.1)



/////////////////////////////////////////////////////////////////////////////////ATR

xATR = ta.atr(nATRPeriod)
nLoss = nATRMultip * xATR
xATRTrailingStop = float(na)
iff_1 = close > nz(xATRTrailingStop[1], 0) ? close - nLoss : close + nLoss
iff_2 = close < nz(xATRTrailingStop[1], 0) and close[1] < nz(xATRTrailingStop[1], 0) ? math.min(nz(xATRTrailingStop[1]), close + nLoss) : iff_1
xATRTrailingStop := close > nz(xATRTrailingStop[1], 0) and close[1] > nz(xATRTrailingStop[1], 0) ? math.max(nz(xATRTrailingStop[1]), close - nLoss) : iff_2

pos = int(na)
iff_3 = close[1] > nz(xATRTrailingStop[1], 0) and close < nz(xATRTrailingStop[1], 0) ? -1 : nz(pos[1], 0)
pos := close[1] < nz(xATRTrailingStop[1], 0) and close > nz(xATRTrailingStop[1], 0) ? 1 : iff_3

color_1 = pos == -1 ? color.red : pos == 1 ? color.lime : color.blue
//patr=plot(xATRTrailingStop, color=color, linewidth=2, title="ATR Trailing Stop", transp=0)

// Deternine if we are currently LONG
isLong = false
isLong := nz(isLong[1], false)

// Determine if we are currently SHORT
isShort = false
isShort := nz(isShort[1], false)

//Trading
// Buy only if the buy signal is triggered and we are not already long
LONG = not isLong and pos == 1


// Sell only if the sell signal is triggered and we are not already short   
SHORT = not isShort and pos == -1


if LONG
    isLong := true
    isShort := false
    isShort

if SHORT
    isLong := false
    isShort := true
    isShort

barcolor(isLong ? color.lime : isShort ? color.red : na)


// Show Break Alerts
plotshape(SHORT, title='Sell', style=shape.labeldown, location=location.abovebar, size=size.normal, text='Sell', textcolor=color.new(color.white, 0), color=color.new(color.red, 0))
plotshape(LONG, title='Buy', style=shape.labelup, location=location.belowbar, size=size.normal, text='Buy', textcolor=color.new(color.white, 0), color=color.new(color.green, 0))


// === /PLOTTING ===
// Send alert to TV alarm sub-system
alertcondition(LONG, title='Sell', message='Sell')
alertcondition(SHORT, title='BuY', message='Buy')
alertcondition(SHORT, title='BuY', message='Buy')
alertcondition(SHORT, title='BuY', message='Buy')

////////////////////////////////////////////////////////////////////////////////VWMA

len2 = input.int(100, minval=1, title='Smooth')
src = input(close, title='Source')
out = ta.vwma(src, len2)

avg1 = math.avg(out, xATRTrailingStop)
plot(avg1, color=color.new(color.aqua, 0), title='ATR')

